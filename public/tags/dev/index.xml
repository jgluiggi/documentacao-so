<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on Documentação do Projeto de SO</title><link>http://localhost:1313/tags/dev/</link><description>Recent content in Dev on Documentação do Projeto de SO</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 05 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Diário do Dev: Deixando dinâmico</title><link>http://localhost:1313/post/05-05-24/</link><pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/05-05-24/</guid><description>Hoje demos continuidade ao projeto, tornando as solicitações mais dinâmicas e adicionando uma configuração padrão de HDD para rodar as simulações.
Como tornamos as solicitações mais dinâmicas? Simplesmente com um append a cada vez que processamos uma solicitação, ainda não é tão dinâmico quanto um caso real (solicitações de tamanhos diferentes em tempos diferentes) mas é um começo.
A configuração padrão do HDD é a que estávamos usando antes, só que desacoplada:</description></item><item><title>Diário do Dev: Nascimento</title><link>http://localhost:1313/post/03-05-24/</link><pubDate>Fri, 03 May 2024 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/03-05-24/</guid><description>Hoje, fizemos a implementação básica do nosso simulador de disco, que deverá indicar a latência de acesso para uma lista de blocos passados como entrada.
Conseguimos fazer uma base boa para o projeto usando a documentação da questão e nossa experiência com calcular esses acessos na mão em sala de aula; nosso primeiro algoritmo (não começamos com SSTF, acredite ou não) somente lia a lista que providenciamos em ordem, atualizando sua posição em cada acesso e calculando a latência através da soma do seek, da rotação e do tempo de transferência (ainda não fazemos operações de write, então o tempo de transferência atualmente não faz nada).</description></item></channel></rss>